<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://soap.esauth.nevis.ch/xsd"
           xmlns="http://soap.esauth.nevis.ch/xsd"
           attributeFormDefault="qualified"
           elementFormDefault="qualified">

    <xs:complexType name="AuthLoginContext">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="props" type="Property"/>
            <xs:element minOccurs="0" name="clientid" type="xs:string"/>
            <xs:element minOccurs="0" name="domain" type="xs:string"/>
            <xs:element minOccurs="0" name="entryid" type="xs:string"/>
            <xs:element minOccurs="0" name="resource" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="requiredRoles" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="AuthResultContext">
        <xs:sequence>
            <xs:element minOccurs="0" name="guiDesc" type="GuiDesc"/>
            <xs:element minOccurs="0" name="status" type="Status"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="props" type="Property"/>
            <xs:element minOccurs="0" name="newResource" type="xs:string"/>
            <xs:element minOccurs="0" name="secToken" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="actualRoles" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="GuiDesc">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="props" type="Property"/>
            <xs:element minOccurs="0" name="contentType" type="xs:string"/>
            <xs:element minOccurs="0" name="data" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <!--
    28.6.2010/martin: This would be the correct enumerator, but we cannot use it directly, because
    clients expect <status><AUTH_CONTINUE/></status> and not <status>AUTH_CONTINUE</status>.
    As JAXWS has problems with this self-referecing construct (having a value of null and therefore
    never transmited over the wire), we treat it as a set with one element and attach the enum index as a value.
    -->
    <!--
     <xs:simpleType name="Status">
        <xs:restriction base="xs:string">
            <xs:enumeration value="AUTH_CONTINUE" />
            <xs:enumeration value="AUTH_DONE" />
            <xs:enumeration value="AUTH_ERROR" />
            <xs:enumeration value="AUTH_REDIRECT" />
        </xs:restriction>
    </xs:simpleType>
    -->
    <xs:simpleType name="StatusEnumValue">
        <xs:restriction base="xs:int"/>
    </xs:simpleType>
    <xs:complexType name="Status">
        <xs:sequence>
            <xs:element minOccurs="0" name="AUTH_CONTINUE" type="StatusEnumValue"/>
            <xs:element minOccurs="0" name="AUTH_DONE" type="StatusEnumValue"/>
            <xs:element minOccurs="0" name="AUTH_ERROR" type="StatusEnumValue"/>
            <xs:element minOccurs="0" name="AUTH_REDIRECT" type="StatusEnumValue"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="AuthChangeContext">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="props" type="Property"/>
            <xs:element minOccurs="0" name="resource" type="xs:string"/>
            <xs:element minOccurs="0" name="secToken" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="requiredRoles" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="SessionInfo">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="props" type="Property"/>
            <xs:element minOccurs="0" name="clientId" type="xs:string"/>
            <xs:element minOccurs="0" name="globalSessId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="Receiver">
        <xs:sequence>
            <xs:element minOccurs="0" name="user" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="roles" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="InvalidMember">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="InvalidSession">
        <xs:sequence>
            <xs:element minOccurs="0" name="status" type="xs:int"/>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="NoPermission">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="Internal">
        <xs:sequence>
            <xs:element minOccurs="0" name="msg" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="Property">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
